{"version":3,"sources":["Components/Form.jsx","Components/Header.jsx","Components/SongCard.jsx","Components/CardContainer.jsx","Components/PageButton.jsx","Components/DetailSongCard.jsx","Pages/Home.jsx","App.jsx","reportWebVitals.js","index.js"],"names":["Form","props","_useState","useState","_useState2","Object","slicedToArray","term","setTerm","react_default","a","createElement","Fragment","className","onSubmit","event","preventDefault","htmlFor","id","type","placeholder","required","onChange","target","value","Header","src","alt","SongCard","cover","title","artist","albumType","releaseDate","audio","onClick","data","datos","onSelectSong","concat","CardContainer","children","PageButton","buttonClass","href","onChangePage","size","name","DetailSongCard","visibility","onHideHandler","allow","url","Home","songsList","setSongsList","_useState3","_useState4","pageNumber","setPageNumber","_useState5","_useState6","termOfSearch","setTermOfSearch","_useState7","_useState8","searchState","setSearchState","_useState9","_useState10","setVisibility","_useState11","_useState12","selectedCover","setSelectedCover","_useState13","_useState14","selectedTitle","setSelectedTitle","_useState15","_useState16","selectedAlbumbType","setSelectedAlbumbType","_useState17","_useState18","selectedReleaseDate","setSelectedReleaseDate","_useState19","_useState20","selectedArtist","setSelectedArtist","_useState21","_useState22","selectedAudio","setSelectedAudio","useEffect","fetch","method","then","response","json","tracks","items","length","Swal","fire","icon","focusConfirm","confirmButtonText","confirmButtonAriaLabel","catch","error","onSelectSongHandler","Header_Header","Form_Form","CardContainer_CardContainer","map","song","SongCard_SongCard","key","Math","random","album","images","album_type","release_date","explicit","artists","preview_url","PageButton_PageButton","ceil","DetailSongCard_DetailSongCard","App","Home_Home","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","App_App","document","getElementById"],"mappings":"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","file":"static/js/main.17d9c6b8.chunk.js","sourcesContent":["import React, { useState } from \"react\";\nimport './Styles/Form.css'\n\nexport default function Form(props) {\n    const [term, setTerm] = useState('')\n    const termChangeHandler = (event) => {\n        setTerm(event.target.value)\n    }\n    const submitHandler = (event) => {\n        event.preventDefault();\n        props.onSubmit(term)\n    }\n    return (\n        <React.Fragment>\n            <form className=\"form\" onSubmit={submitHandler}>\n                <label className=\"form--label\" htmlFor=\"input--song\">Search your songs\n                </label>\n                <input id=\"input--song\" className=\"form--input\" type=\"text\" placeholder=\"Artist or songs\" required onChange={termChangeHandler} />\n                <button className=\"form--button\" type=\"submit\">Search</button>\n            </form>\n        </React.Fragment>\n    )\n}","import React from \"react\";\nimport './Styles/Header.css';\n\nexport default function Header() {\n    return (\n        <React.Fragment>\n            <nav className=\"navbar\" id=\"header\">\n                    <img src=\"https://img.icons8.com/external-tal-revivo-color-tal-revivo/50/000000/external-spotify-a-swedish-audio-streaming-platform-that-provides-drm-protected-logo-color-tal-revivo.png\" alt=\"Spotify logo\" />\n                    <span className=\"navbar-brand mb-0 h1\">SpotiSearch</span>\n            </nav>\n        </React.Fragment>\n    )\n}","import React from \"react\";\nimport './Styles/SongCard.css'\n\nlet isExplicit = ''\nexport default function SongCard(props) {\n    const { cover, title, artist, albumType, releaseDate, audio } = props\n\n    const selectSongHandler = (data) => {\n        const datos = {\n            cover: cover,\n            title: title,\n            artist: artist,\n            albumType: albumType,\n            releaseDate: releaseDate,\n            audio: audio + '?cid=null'\n        }\n        props.onSelectSong(datos)\n    }\n\n    return (\n        <React.Fragment>\n            <div className=\"songCard\" onClick={selectSongHandler} >\n                <img className=\"songCard--cover\" src={cover} alt={`${title} cover`} />\n                <div className=\"songCard--info\">\n                    <span className=\"card--info--title\">{title}</span>\n                    <span className=\"card--info--artist\">{artist}</span>\n                </div>\n            </div>\n        </React.Fragment>\n    )\n}","import React from \"react\";\nimport './Styles/CardContainer.css'\n\nexport default function CardContainer(props){\n    return(\n        <div className=\"cardContainer\" id=\"cardContainer\">\n            {props.children}\n        </div>\n    )\n}","import React from \"react\";\nimport './Styles/PageButton.css'\n\nexport default function PageButton(props) {\n    const { buttonClass } = props\n    const changePageHandler = () => {\n        props.onChangePage()\n    }\n    return (\n        <React.Fragment>\n            <a href=\"#buttonContainer\">\n                <span className={`pageButton ${buttonClass}`} onClick={changePageHandler}>\n                <ion-icon size=\"large\" name=\"chevron-forward-circle\"></ion-icon>\n                </span>\n            </a>\n        </React.Fragment >\n    )\n}","import React from \"react\";\nimport './Styles/DetailSongCard.css'\n\nexport default function DetailSongCard(props) {\n    const { cover, title, artist, albumType, releaseDate, audio, visibility } = props\n    const hideCardHandler = () => {\n        props.onHideHandler()\n    }\n    return (\n        <>\n            <div className={`${visibility} detailCard`}>\n                <span onClick={hideCardHandler}>\n                    <ion-icon className=\"closeButton\" size=\"large\" name=\"close-circle-outline\"></ion-icon>\n                </span>\n                <img className=\"detailCard--cover\" src={cover} alt={`${title} cover`} />\n                <div className=\"detailCard--title\">{title}</div>\n                <div className=\"detailCard--albumType\">{albumType}</div>\n                <div className=\"detailCard--releaseDate\">{releaseDate}</div>\n                <div className=\"detailCard--artist\">{artist}</div>\n                <iframe src={audio}  allow=\"encrypted-media\"></iframe>\n            </div>\n        </>\n    )\n}","import React, { useEffect, useState } from \"react\";\nimport Swal from 'sweetalert2'\nimport Form from \"../Components/Form\";\nimport Header from \"../Components/Header\";\nimport SongCard from \"../Components/SongCard\";\nimport CardContainer from \"../Components/CardContainer\";\nimport PageButton from \"../Components/PageButton\";\nimport DetailSongCard from \"../Components/DetailSongCard\";\nimport './Styles/Home.css'\n\n\nconst url = 'https://v1.nocodeapi.com/spotisearch/spotify/dDCMLneeqydDKBap/search?q='\n\nexport default function Home() {\n\n    const [songsList, setSongsList] = useState([]);\n    const [pageNumber, setPageNumber] = useState(1);\n    const [termOfSearch, setTermOfSearch] = useState('');\n    const [searchState, setSearchState] = useState(false);\n\n    const [visibility, setVisibility] = useState('hide')\n    const [selectedCover, setSelectedCover] = useState('')\n    const [selectedTitle, setSelectedTitle] = useState('')\n    const [selectedAlbumbType, setSelectedAlbumbType] = useState('')\n    const [selectedReleaseDate, setSelectedReleaseDate] = useState('')\n    const [selectedArtist, setSelectedArtist] = useState('')\n    const [selectedAudio, setSelectedAudio] = useState('')\n\n    const onSubmitHandler = (term) => {\n        setTermOfSearch(term)\n        setSearchState(true)\n    }\n    useEffect(() => {\n        if (searchState) {\n            fetch(`${url}${termOfSearch}&type=track&page=${pageNumber}`, {\n                method: \"GET\",\n            })\n                .then(response => response.json())\n                .then(data => {\n                    setSongsList(data.tracks.items)\n                    if (data.tracks.items.length === 0) {\n                        Swal.fire({\n                            title: 'There are no matches ',\n                            icon: 'info',\n                            focusConfirm: true,\n                            confirmButtonText:\n                            'OK',\n                            confirmButtonAriaLabel: 'Thumbs up, great!',\n                        })\n                        setSearchState(false)\n                    }\n                    setSearchState(true)\n                })\n                .catch((error) => {\n                    Swal.fire({\n                        title: 'Error',\n                        icon: 'error',\n                        focusConfirm: true,\n                        confirmButtonText:\n                            'OK',\n                        confirmButtonAriaLabel: 'Thumbs up, great!',\n                    })\n                });\n        }\n    }, [pageNumber, termOfSearch])\n\n    const handleNextPage = () => {\n        setPageNumber(pageNumber + 19)\n    }\n    const handlePrevPage = () => {\n        setPageNumber(pageNumber - 19)\n    }\n    const onSelectSongHandler = (data) => {\n        setVisibility('')\n        setSelectedCover(data.cover)\n        setSelectedTitle(data.title)\n        setSelectedAlbumbType(data.albumType)\n        setSelectedReleaseDate(data.releaseDate)\n        setSelectedArtist(data.artist)\n        setSelectedAudio(data.audio)\n    }\n    const hideHandler = () => {\n        setVisibility('hide')\n    }\n\n    return (\n        <React.Fragment>\n            <Header />\n            <Form onSubmit={onSubmitHandler} />\n            <CardContainer>\n                {songsList.map((song) =>\n                    <SongCard\n                        key={Math.random()}\n                        cover={song.album.images[1].url}\n                        title={song.name}\n                        albumType={song.album.album_type}\n                        releaseDate={song.album.release_date}\n                        explicit={song.album.explicit}\n                        artist={song.artists[0].name}\n                        audio={song.preview_url}\n                        onSelectSong={onSelectSongHandler} />\n                )}\n            </CardContainer>\n            {searchState &&\n                <div className=\"buttonsContainer\">\n                    <PageButton\n                        buttonClass='prev'\n                        onChangePage={handlePrevPage} />\n                    Page {Math.ceil(pageNumber / 19)}\n                    <PageButton\n                        buttonClass='next'\n                        onChangePage={handleNextPage} />\n                </div>\n            }\n\n            <DetailSongCard\n                onHideHandler={hideHandler}\n                visibility={visibility}\n                title={selectedTitle}\n                cover={selectedCover}\n                artist={selectedArtist}\n                albumType={selectedAlbumbType}\n                releaseDate={selectedReleaseDate}\n                audio={selectedAudio}\n            />\n\n        </React.Fragment>\n    )\n}","import React from 'react';\nimport './App.css';\nimport Home from './Pages/Home';\n\nexport default function App() {\n  return (\n    <>\n    <Home/>\n    </>\n  );\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}